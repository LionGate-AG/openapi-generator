<?php
{{#models}}{{#model}}/**
 * {{classname}}
 */
namespace {{modelPackage}};

/**
 * {{classname}}
 */
class {{classname}}  implements \JsonSerializable{

    {{#vars}}
    /** @var {{{dataType}}} ${{name}} {{description}}*/
{{#deprecated}}
    /** @deprecated */
{{/deprecated}}
    protected ${{name}};

    {{/vars}}
    {{#vars}}
    public function get{{nameInCamelCase}}(){
        return $this->{{name}};
    }

    public function set{{nameInCamelCase}}(${{name}}){
        $this->{{name}} = ${{name}};
    }

    {{/vars}}

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return [
            {{#vars}}
                "{{name}}" => $this->{{name}},
            {{/vars}}
        ];
    }
}
{{/model}}{{/models}}