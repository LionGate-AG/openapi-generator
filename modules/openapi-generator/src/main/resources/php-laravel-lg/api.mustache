<?php

{{>info}}

namespace {{apiPackageNamespace}};

use Illuminate\Support\Facades\Validator;
use Illuminate\Validation\ValidationException;
use Illuminate\Routing\Controller as BaseController;

{{#operations}}abstract class {{classname}} extends BaseController
{
    {{#operation}}
    /**
     * Operation {{{operationId}}}
     * Path: {{{path}}}
{{#summary}}
     *
     * {{{summary}}}
{{/summary}}
{{#notes}}
     *
     * {{{notes}}}
{{/notes}}
     *
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
     */
    public function {{operationId}}() {
        return response('How about implementing {{nickname}} as a {{httpMethod}} method?');
    }

    protected function validate{{operationIdCamelCase}}() {
        
        $input = array_merge(request()->all(), request()->route()->parameters());

        $validationRules = [
        {{#allParams}}
        {{^isModel}}
            '{{paramName}}' => '{{#required}}required|{{/required}}{{#isInteger}}integer|{{/isInteger}}{{!
            }}{{#isArray}}array|{{#maxLength}}max:{{maxLength}}|{{/maxLength}}{{#minLength}}min:{{minLength}}|{{/minLength}}{{/isArray}}{{!
            }}{{#maximum}}lt{{^exclusiveMaximum}}e{{/exclusiveMaximum}}:{{maximum}}|{{/maximum}}{{#minimum}}gt{{^exclusiveMinimum}}e{{/exclusiveMinimum}}:{{minimum}}|{{/minimum}}{{!
            }}{{#pattern}}regex:{{{pattern}}}|{{/pattern}}{{#isBoolean}}boolean|{{/isBoolean}}',
        {{/isModel}}
        {{/allParams}}
        ];
        {{#bodyParams}}
        $validationRules = array_merge($validationRules, {{dataType}}::getValidationRules());
        {{/bodyParams}}

        $validator = Validator::make($input, $validationRules);

        if($validator->fails()) {
            throw new ValidationException($validator);
        }

        $validated = $validator->validated();
        {{#allParams}}
        {{^required}}
        {{^isModel}}
        if(!isset($validated['{{paramName}}'])) 
            $validated['{{paramName}}'] = {{defaultValue}};
        {{/isModel}}
        {{/required}}
        {{/allParams}}

        return $validated;
    }

    {{/operation}}
}
{{/operations}}
