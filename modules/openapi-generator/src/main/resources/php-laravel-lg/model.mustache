<?php

{{>info}}

namespace {{modelPackageNamespace}};{{!
}}{{#models}}{{#model}}{{!
}}{{#vendorExtensions.x-isResource}}

use Illuminate\Http\Resources\Json\JsonResource;{{/vendorExtensions.x-isResource}}{{!
}}{{#vendorExtensions.x-isCollection}}

use Illuminate\Http\Resources\Json\ResourceCollection;{{/vendorExtensions.x-isCollection}}{{!
}}

/**
 * {{name}}
 */
class {{classname}}{{#vendorExtensions.x-isResource}} extends JsonResource{{/vendorExtensions.x-isResource}}{{#vendorExtensions.x-isCollection}} extends ResourceCollection{{/vendorExtensions.x-isCollection}}
{   {{^vendorExtensions.x-isResource}}{{^vendorExtensions.x-isCollection}}
    public static function getValidationRules(String $prefix = "") 
    {
        $validationRules = [
            {{#vars}}
            {{^isArray}}
            $prefix.'{{name}}' => '{{#required}}required|{{/required}}{{#isInteger}}integer|{{/isInteger}}{{!
            }}{{#isArray}}array|{{#maxLength}}max:{{maxLength}}|{{/maxLength}}{{#minLength}}min:{{minLength}}|{{/minLength}}{{/isArray}}{{!
            }}{{#maximum}}lt{{^exclusiveMaximum}}e{{/exclusiveMaximum}}:{{maximum}}|{{/maximum}}{{#minimum}}gt{{^exclusiveMinimum}}e{{/exclusiveMinimum}}:{{minimum}}|{{/minimum}}{{!
            }}{{#pattern}}regex:{{{pattern}}}|{{/pattern}}{{#isBoolean}}boolean|{{/isBoolean}}',
            {{/isArray}}
            {{/vars}}
        ];
        {{#vars}}{{#isArray}}{{#items.isModel}}$validationRules = array_merge($validationRules, {{items.dataType}}::getValidationRules('{{name}}.*.'));
        {{/items.isModel}}{{/isArray}}{{/vars}}
        return $validationRules;
    }{{/vendorExtensions.x-isCollection}}{{/vendorExtensions.x-isResource}}{{!
    }}{{#vendorExtensions.x-isResource}}
    /**
     * Transform the resource into an array.
     *
     * @param \Illuminate\Http\Request $request
     * @return array
     */
    public function toArray($request) 
    {
        return [
            {{#vars}}
            {{#isArray}}
            '{{name}}' => {{items.dataType}}Resource::collection($this->{{name}}),
            {{/isArray}}
            {{^isArray}}
            '{{name}}' => $this->{{nameInSnakeCase}},
            {{/isArray}}
            {{/vars}}
        ];
    }{{/vendorExtensions.x-isResource}}
    {{#vendorExtensions.x-isCollection}}
    /**
     * Transform the resource collection into an array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable
     */
    public function toArray($request)
    {
        return parent::toArray($request);
    }
    {{/vendorExtensions.x-isCollection}}
}
{{/model}}{{/models}}